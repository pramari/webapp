[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
reproducible = true

[tool.hatch.build.targets.wheel]
packages = ["webapp/"]

[project]
name = "pramari-webapp"
version = "1.1.24"
authors = [
  { name="Andreas Neumeier", email="andreas@neumeier.org" },
]
description = "Authentication, Userprofiles, Federation"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
  "django>=5",
  "django-allauth[socialaccount]",
  # "django-activity-stream",
  "django-oauth-toolkit",
  "djangorestframework",
  "django-guardian",
  "django-anymail[mailgun]",
  "Pillow",
  "pyyaml",
  "celery",
  "pyld",
  "rfc3987",
  "PyJWT",
]

classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

[project.urls]
"Homepage" = "https://www.pramari.de"
"Bug Tracker" = "https://github.com/pramari/npc/issues"


[tool.pytest]
DJANGO_SETTINGS_MODULE = "tests.settings"
django_debug_mode = true

[tool.pytest.ini_options]
python_files = "tests.py test_*.py"
# python_files = ["test_*.py", "tests.py"]
DJANGO_SETTINGS_MODULE = "tests.settings"
django_debug_mode = true

[tool.coverage.run]
source = ["webapp"]

[tool.mypy]
plugins = ["mypy_django_plugin.main"]
ignore_missing_imports = true

[tool.django-stubs]
django_settings_module = "tests.settings"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"

[tool.tox]
min_version = 4.0
legacy_tox_ini = """
    [tox]
    isolated_build = True
    env_list =
        py312
        type

    [testenv]
    setenv =
        DJANGO_SETTINGS_MODULE=tests.settings
        PYTHONPATH = ".";{toxinidir}:{toxinidir}
    
    deps =
        coverage
        pytest
        pytest-django
        pytest-cov
        ruff
        mypy
        django-stubs[compatible-mypy]

    commands =
        mypy --install-types webapp/signature.py
        ruff check webapp
        pytest webapp
        # coverage run --source webapp tests/manage.py test --settings=tests.settings
        # coverage xml
"""
